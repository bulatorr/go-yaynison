// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v5.27.1
// source: redirector/ynison-redirector-service.proto

package redirector

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type RedirectRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RedirectRequest) Reset() {
	*x = RedirectRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_redirector_ynison_redirector_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RedirectRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RedirectRequest) ProtoMessage() {}

func (x *RedirectRequest) ProtoReflect() protoreflect.Message {
	mi := &file_redirector_ynison_redirector_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RedirectRequest.ProtoReflect.Descriptor instead.
func (*RedirectRequest) Descriptor() ([]byte, []int) {
	return file_redirector_ynison_redirector_service_proto_rawDescGZIP(), []int{0}
}

type RedirectResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Целевой хост для подключения к Ynison
	Host string `protobuf:"bytes,1,opt,name=host,proto3" json:"host,omitempty"`
	// Билет, его надо будет отнести в Ynison в хэдере. Чуть позже добавим описание хэдера.
	// Цель этого билета, защитить от ДДОС атаки на отдельный хост. Билет будет проверяться до аутентификации в BB.
	RedirectTicket string `protobuf:"bytes,2,opt,name=redirect_ticket,json=redirectTicket,proto3" json:"redirect_ticket,omitempty"`
	// Уникальный идентификатор сессии. Используется для логирования и отладки.
	// Для удобства отладки стоит с ним же прийти в Ynison в последствии.
	SessionId int64 `protobuf:"varint,3,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	// Настройки keep alive при подключении к Ynison
	KeepAliveParams *KeepAliveParams `protobuf:"bytes,4,opt,name=keep_alive_params,json=keepAliveParams,proto3" json:"keep_alive_params,omitempty"`
}

func (x *RedirectResponse) Reset() {
	*x = RedirectResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_redirector_ynison_redirector_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RedirectResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RedirectResponse) ProtoMessage() {}

func (x *RedirectResponse) ProtoReflect() protoreflect.Message {
	mi := &file_redirector_ynison_redirector_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RedirectResponse.ProtoReflect.Descriptor instead.
func (*RedirectResponse) Descriptor() ([]byte, []int) {
	return file_redirector_ynison_redirector_service_proto_rawDescGZIP(), []int{1}
}

func (x *RedirectResponse) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

func (x *RedirectResponse) GetRedirectTicket() string {
	if x != nil {
		return x.RedirectTicket
	}
	return ""
}

func (x *RedirectResponse) GetSessionId() int64 {
	if x != nil {
		return x.SessionId
	}
	return 0
}

func (x *RedirectResponse) GetKeepAliveParams() *KeepAliveParams {
	if x != nil {
		return x.KeepAliveParams
	}
	return nil
}

type KeepAliveParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	KeepAliveTimeSeconds    int32 `protobuf:"varint,1,opt,name=keep_alive_time_seconds,json=keepAliveTimeSeconds,proto3" json:"keep_alive_time_seconds,omitempty"`
	KeepAliveTimeoutSeconds int32 `protobuf:"varint,2,opt,name=keep_alive_timeout_seconds,json=keepAliveTimeoutSeconds,proto3" json:"keep_alive_timeout_seconds,omitempty"`
}

func (x *KeepAliveParams) Reset() {
	*x = KeepAliveParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_redirector_ynison_redirector_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KeepAliveParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KeepAliveParams) ProtoMessage() {}

func (x *KeepAliveParams) ProtoReflect() protoreflect.Message {
	mi := &file_redirector_ynison_redirector_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KeepAliveParams.ProtoReflect.Descriptor instead.
func (*KeepAliveParams) Descriptor() ([]byte, []int) {
	return file_redirector_ynison_redirector_service_proto_rawDescGZIP(), []int{2}
}

func (x *KeepAliveParams) GetKeepAliveTimeSeconds() int32 {
	if x != nil {
		return x.KeepAliveTimeSeconds
	}
	return 0
}

func (x *KeepAliveParams) GetKeepAliveTimeoutSeconds() int32 {
	if x != nil {
		return x.KeepAliveTimeoutSeconds
	}
	return 0
}

var File_redirector_ynison_redirector_service_proto protoreflect.FileDescriptor

var file_redirector_ynison_redirector_service_proto_rawDesc = []byte{
	0x0a, 0x2a, 0x72, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x2f, 0x79, 0x6e, 0x69,
	0x73, 0x6f, 0x6e, 0x2d, 0x72, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x2d, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0f, 0x79, 0x6e,
	0x69, 0x73, 0x6f, 0x6e, 0x5f, 0x72, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x1a, 0x1c, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x11, 0x0a, 0x0f, 0x52,
	0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0xbc,
	0x01, 0x0a, 0x10, 0x52, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x12, 0x27, 0x0a, 0x0f, 0x72, 0x65, 0x64, 0x69, 0x72,
	0x65, 0x63, 0x74, 0x5f, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0e, 0x72, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74,
	0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12,
	0x4c, 0x0a, 0x11, 0x6b, 0x65, 0x65, 0x70, 0x5f, 0x61, 0x6c, 0x69, 0x76, 0x65, 0x5f, 0x70, 0x61,
	0x72, 0x61, 0x6d, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x79, 0x6e, 0x69,
	0x73, 0x6f, 0x6e, 0x5f, 0x72, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x2e, 0x4b, 0x65, 0x65,
	0x70, 0x41, 0x6c, 0x69, 0x76, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x52, 0x0f, 0x6b, 0x65,
	0x65, 0x70, 0x41, 0x6c, 0x69, 0x76, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x22, 0x85, 0x01,
	0x0a, 0x0f, 0x4b, 0x65, 0x65, 0x70, 0x41, 0x6c, 0x69, 0x76, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d,
	0x73, 0x12, 0x35, 0x0a, 0x17, 0x6b, 0x65, 0x65, 0x70, 0x5f, 0x61, 0x6c, 0x69, 0x76, 0x65, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x5f, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x14, 0x6b, 0x65, 0x65, 0x70, 0x41, 0x6c, 0x69, 0x76, 0x65, 0x54, 0x69, 0x6d,
	0x65, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x12, 0x3b, 0x0a, 0x1a, 0x6b, 0x65, 0x65, 0x70,
	0x5f, 0x61, 0x6c, 0x69, 0x76, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x5f, 0x73,
	0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x17, 0x6b, 0x65,
	0x65, 0x70, 0x41, 0x6c, 0x69, 0x76, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x53, 0x65,
	0x63, 0x6f, 0x6e, 0x64, 0x73, 0x32, 0xb3, 0x01, 0x0a, 0x15, 0x59, 0x6e, 0x69, 0x73, 0x6f, 0x6e,
	0x52, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12,
	0x99, 0x01, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x52, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x54,
	0x6f, 0x59, 0x6e, 0x69, 0x73, 0x6f, 0x6e, 0x12, 0x20, 0x2e, 0x79, 0x6e, 0x69, 0x73, 0x6f, 0x6e,
	0x5f, 0x72, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x2e, 0x52, 0x65, 0x64, 0x69, 0x72, 0x65,
	0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x79, 0x6e, 0x69, 0x73,
	0x6f, 0x6e, 0x5f, 0x72, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x2e, 0x52, 0x65, 0x64, 0x69,
	0x72, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x3d, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x37, 0x22, 0x35, 0x2f, 0x72, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f,
	0x72, 0x2e, 0x59, 0x6e, 0x69, 0x73, 0x6f, 0x6e, 0x52, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x47, 0x65, 0x74, 0x52, 0x65, 0x64, 0x69, 0x72,
	0x65, 0x63, 0x74, 0x54, 0x6f, 0x59, 0x6e, 0x69, 0x73, 0x6f, 0x6e, 0x42, 0x6c, 0x0a, 0x1f, 0x63,
	0x6f, 0x6d, 0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x2e,
	0x79, 0x6e, 0x69, 0x73, 0x6f, 0x6e, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x50, 0x01,
	0x5a, 0x47, 0x61, 0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2d, 0x74, 0x65, 0x61, 0x6d, 0x2e,
	0x72, 0x75, 0x2f, 0x6d, 0x75, 0x73, 0x69, 0x63, 0x2f, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64,
	0x2f, 0x6d, 0x75, 0x73, 0x69, 0x63, 0x2d, 0x79, 0x6e, 0x69, 0x73, 0x6f, 0x6e, 0x2f, 0x72, 0x65,
	0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x72,
	0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_redirector_ynison_redirector_service_proto_rawDescOnce sync.Once
	file_redirector_ynison_redirector_service_proto_rawDescData = file_redirector_ynison_redirector_service_proto_rawDesc
)

func file_redirector_ynison_redirector_service_proto_rawDescGZIP() []byte {
	file_redirector_ynison_redirector_service_proto_rawDescOnce.Do(func() {
		file_redirector_ynison_redirector_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_redirector_ynison_redirector_service_proto_rawDescData)
	})
	return file_redirector_ynison_redirector_service_proto_rawDescData
}

var file_redirector_ynison_redirector_service_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_redirector_ynison_redirector_service_proto_goTypes = []interface{}{
	(*RedirectRequest)(nil),  // 0: ynison_redirect.RedirectRequest
	(*RedirectResponse)(nil), // 1: ynison_redirect.RedirectResponse
	(*KeepAliveParams)(nil),  // 2: ynison_redirect.KeepAliveParams
}
var file_redirector_ynison_redirector_service_proto_depIdxs = []int32{
	2, // 0: ynison_redirect.RedirectResponse.keep_alive_params:type_name -> ynison_redirect.KeepAliveParams
	0, // 1: ynison_redirect.YnisonRedirectService.GetRedirectToYnison:input_type -> ynison_redirect.RedirectRequest
	1, // 2: ynison_redirect.YnisonRedirectService.GetRedirectToYnison:output_type -> ynison_redirect.RedirectResponse
	2, // [2:3] is the sub-list for method output_type
	1, // [1:2] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_redirector_ynison_redirector_service_proto_init() }
func file_redirector_ynison_redirector_service_proto_init() {
	if File_redirector_ynison_redirector_service_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_redirector_ynison_redirector_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RedirectRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_redirector_ynison_redirector_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RedirectResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_redirector_ynison_redirector_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KeepAliveParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_redirector_ynison_redirector_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_redirector_ynison_redirector_service_proto_goTypes,
		DependencyIndexes: file_redirector_ynison_redirector_service_proto_depIdxs,
		MessageInfos:      file_redirector_ynison_redirector_service_proto_msgTypes,
	}.Build()
	File_redirector_ynison_redirector_service_proto = out.File
	file_redirector_ynison_redirector_service_proto_rawDesc = nil
	file_redirector_ynison_redirector_service_proto_goTypes = nil
	file_redirector_ynison_redirector_service_proto_depIdxs = nil
}
